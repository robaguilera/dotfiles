-- settings
-- require("nvim-tree").setup({
--     auto_reload_on_write = true,
--     disable_netrw = false,
--     hijack_cursor = false,
--     hijack_netrw = true,
--     hijack_unnamed_buffer_when_opening = false,
--     root_dirs = {},
--     prefer_startup_root = false,
--     sync_root_with_cwd = true,
--     select_prompts = true,
--     git = {
--         enable = true,
--         ignore = true,
--     },
--     modified = {
--         enable = true,
--         show_on_dirs = true,
--     },
--     on_attach = function(bufnr)
--         local api = require('nvim-tree.api')

--         local function opts(desc)
--             return { desc = 'nvim-tree: ' .. desc, buffer = bufnr, noremap = true, silent = true, nowait = true }
--         end

--         vim.keymap.set("n", "h", api.tree.close,        opts("Close"))
--         vim.keymap.set("n", "H", api.tree.collapse_all, opts("Collapse All"))

--         vim.keymap.set("n", "o", function()
--             local node = api.tree.get_node_under_cursor()

--             if node.nodes ~= nil then
--                 -- expand or collapse folder
--                 api.node.open.edit()
--             else
--                 -- open file
--                 api.node.open.edit()
--                 -- Close the tree if file was opened
--                 api.tree.close()
--             end
--         end, opts("Edit Or Open"))

--         vim.keymap.set('n', '<C-/>', function()
--             local node = api.tree.get_node_under_cursor()
--             if node.nodes ~= nil then
--                 -- expand or collapse folder
--                 api.node.open.edit()
--             else
--                 -- open file as vsplit
--                 api.node.open.vertical()
--             end
--         end, opts('vsplit_preview'))
--     end,
--     sort_by = "case_sensitive",
--     renderer = {
--         group_empty = true,
--     },
--     update_focused_file = {
--         enable = true,
--         update_cwd = true,
--     },
--     view = {
--         adaptive_size = false,
--         centralize_selection = true,
--         relativenumber = true,
--         width = 30,
--         hide_root_folder = false,
--     },
-- })

-- -- icons
-- vim.g.nvim_tree_icons = {
--   default = " üì•",
--   symlink = "ÔíÅ",
--   git = {
--     unstaged = "ÔëÑ",
--     staged = "S",
--     unmerged = "Óúß",
--     renamed = "‚ûú",
--     deleted = "Ôëò",
--     untracked = "U",
--     ignored = "‚óå",
--   },
--   folder = {
--     default = "Óóø",
--     open = "Óóæ",
--     empty = "ÔÑî",
--     empty_open = "ÔÑï",
--     symlink = "ÔíÇ",
--   },
-- }
-- -- Explorer action menu
-- local tree_actions = {
-- 	{
-- 		name = "Create node",
-- 		handler = require("nvim-tree.api").fs.create,
-- 	},
-- 	{
-- 		name = "Remove node",
-- 		handler = require("nvim-tree.api").fs.remove,
-- 	},
-- 	{
-- 		name = "Rename node",
-- 		handler = require("nvim-tree.api").fs.rename,
-- 	},
-- 	{
-- 		name = "Fully rename node",
-- 		handler = require("nvim-tree.api").fs.rename_sub,
-- 	},
-- 	{
-- 		name = "Copy",
-- 		handler = require("nvim-tree.api").fs.copy.node,
-- 	},

-- }

-- local function tree_actions_menu(node)
-- 	local entry_maker = function(menu_item)
-- 		return {
-- 			value = menu_item,
-- 			ordinal = menu_item.name,
-- 			display = menu_item.name,
-- 		}
-- 	end

-- 	local finder = require("telescope.finders").new_table({
-- 		results = tree_actions,
-- 		entry_maker = entry_maker,
-- 	})

-- 	local sorter = require("telescope.sorters").get_generic_fuzzy_sorter()

-- 	local default_options = {
-- 		finder = finder,
-- 		sorter = sorter,
-- 		attach_mappings = function(prompt_buffer_number)
-- 			local actions = require("telescope.actions")

-- 			-- On item select
-- 			actions.select_default:replace(function()
-- 				local state = require("telescope.actions.state")
-- 				local selection = state.get_selected_entry()
-- 				-- Closing the picker
-- 				actions.close(prompt_buffer_number)
-- 				-- Executing the callback
-- 				selection.value.handler(node)
-- 			end)

-- 			-- The following actions are disabled in this example
-- 			-- You may want to map them too depending on your needs though
-- 			actions.add_selection:replace(function() end)
-- 			actions.remove_selection:replace(function() end)
-- 			actions.toggle_selection:replace(function() end)
-- 			actions.select_all:replace(function() end)
-- 			actions.drop_all:replace(function() end)
-- 			actions.toggle_all:replace(function() end)

-- 			return true
-- 		end,
-- 	}

-- 	-- Opening the menu
-- 	require("telescope.pickers").new({ prompt_title = "Tree menu" }, default_options):find()
-- end

-- vim.keymap.set("n", "<C-Space>", tree_actions_menu, { noremap = true, silent = true })

-- -- Open file after creating it
-- local api = require("nvim-tree.api")
-- api.events.subscribe(api.events.Event.FileCreated, function(file)
--   vim.cmd("edit " .. file.fname)
-- end)
